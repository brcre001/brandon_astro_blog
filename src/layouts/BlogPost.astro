---
import Layout from './Layout.astro';
import Container from '../components/Container.astro';

interface Props {
    title: string;
    description: string;
    pubDate: Date;
    image?: string;
    tags?: string[];
}

const { title, description, pubDate, image, tags } = Astro.props;
const formattedDate = pubDate.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});
---

<Layout title={title} description={description}>
    <article class="blog-post">
        <Container>
            <header>
                {tags && tags.length > 0 && (
                    <div class="tags">
                        {tags.map(tag => (
                            <a href={`/blog/tag/${tag.toLowerCase()}`} class="tag">#{tag}</a>
                        ))}
                    </div>
                )}
                <h1>{title}</h1>
                <time datetime={pubDate.toISOString()}>{formattedDate}</time>
            </header>

            {image && (
                <div class="featured-image">
                    <img src={image} alt={title} />
                </div>
            )}

            <div class="content">
                <slot />
            </div>
        </Container>
    </article>
</Layout>

<style lang="scss">
    .blog-post {
        margin: 2rem 0;
        
        header {
            text-align: center;
            margin-bottom: 2rem;

            h1 {
                font-size: 2.5rem;
                margin: 1rem 0;
                background-image: var(--accent-gradient);
                -webkit-background-clip: text;
                -webkit-text-fill-color: transparent;
                background-size: 400%;
                background-position: 0%;
            }

            time {
                color: rgba(255, 255, 255, 0.6);
                font-size: 1rem;
            }
        }

        .tags {
            display: flex;
            gap: 0.5rem;
            justify-content: center;
            flex-wrap: wrap;
            margin-bottom: 1rem;
        }

        .tag {
            font-size: 0.9rem;
            color: rgb(var(--accent));
            text-decoration: none;
            transition: color 0.2s ease;

            &:hover {
                color: white;
            }
        }

        .featured-image {
            margin: 2rem 0;
            border-radius: 1rem;
            overflow: hidden;
            
            img {
                width: 100%;
                height: auto;
                display: block;
            }
        }

        .content {
            max-width: 800px;
            margin: 0 auto;
            font-size: 1.1rem;
            line-height: 1.8;
            color: rgba(255, 255, 255, 0.9);

            :global(h2) {
                font-size: 1.8rem;
                margin: 2rem 0 1rem;
                color: white;
            }

            :global(h3) {
                font-size: 1.4rem;
                margin: 1.5rem 0 1rem;
                color: white;
            }

            :global(p) {
                margin-bottom: 1.5rem;
            }

            :global(ul), :global(ol) {
                margin: 1rem 0;
                padding-left: 1.5rem;
            }

            :global(li) {
                margin-bottom: 0.5rem;
            }

            :global(pre) {
                background: rgba(255, 255, 255, 0.1);
                padding: 1.5rem;
                border-radius: 0.5rem;
                overflow-x: auto;
                margin: 1.5rem 0;
            }

            :global(code) {
                font-family: 'Fira Code', monospace;
                font-size: 0.9em;
            }

            :global(blockquote) {
                border-left: 4px solid rgb(var(--accent));
                padding-left: 1rem;
                margin: 1.5rem 0;
                color: rgba(255, 255, 255, 0.7);
            }

            :global(img) {
                max-width: 100%;
                height: auto;
                border-radius: 0.5rem;
                margin: 1.5rem 0;
            }

            :global(a) {
                color: rgb(var(--accent));
                text-decoration: none;
                
                &:hover {
                    text-decoration: underline;
                }
            }
        }
    }
</style> 