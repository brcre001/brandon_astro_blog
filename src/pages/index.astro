---
import Layout from '../layouts/Layout.astro';
import Container from '../components/Container.astro';
import BlogCard from '../components/BlogCard.astro';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog'))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, 3);
---

<Layout title="Brandon's Web Development Blog" description="Explore web development tutorials, programming insights, and modern technology solutions.">
	<main>
		<Container>
			<section class="hero">
				<h1>Welcome to <span class="text-gradient">Brandon's Blog</span></h1>
				<p>
					Exploring the world of web development, one line of code at a time.
					Here you'll find tutorials, insights, and best practices for modern web development.
				</p>
				<div class="cta-buttons">
					<a href="/blog" class="button primary">Read Blog</a>
					<a href="/about" class="button">About Me</a>
				</div>
			</section>

			<section class="featured-posts">
				<h2>Latest Posts</h2>
				<div class="blog-grid">
					{posts.map(post => (
						<BlogCard
							title={post.data.title}
							description={post.data.description}
							pubDate={post.data.pubDate}
							url={`/blog/${post.slug}`}
							image={post.data.image}
							tags={post.data.tags}
						/>
					))}
				</div>
				<div class="view-all">
					<a href="/blog" class="button outline">View All Posts</a>
				</div>
			</section>

			<section class="topics">
				<h2>Topics I Write About</h2>
				<div class="topics-grid">
					<a href="/blog/tag/javascript" class="topic-card">
						<h3>JavaScript</h3>
						<p>Modern JavaScript features, best practices, and tutorials.</p>
					</a>
					<a href="/blog/tag/react" class="topic-card">
						<h3>React</h3>
						<p>React development, hooks, patterns, and optimization techniques.</p>
					</a>
					<a href="/blog/tag/web-development" class="topic-card">
						<h3>Web Development</h3>
						<p>General web development topics, tools, and technologies.</p>
					</a>
					<a href="/blog/tag/astro" class="topic-card">
						<h3>Astro</h3>
						<p>Building fast websites with Astro and modern tools.</p>
					</a>
				</div>
			</section>

			<section class="newsletter">
				<div class="newsletter-content">
					<h2>Stay Updated</h2>
					<p>Subscribe to my newsletter for the latest web development tips and tutorials.</p>
					<form class="newsletter-form">
						<input type="email" placeholder="Enter your email" required>
						<button type="submit" class="button primary">Subscribe</button>
					</form>
				</div>
			</section>
		</Container>
	</main>
</Layout>

<style lang="scss">
	.hero {
		text-align: center;
		padding: 6rem 0;
		max-width: 800px;
		margin: 0 auto;

		h1 {
			font-size: clamp(2.5rem, 5vw, 4rem);
			line-height: 1.2;
			margin-bottom: 1.5rem;
		}

		p {
			font-size: clamp(1.1rem, 2vw, 1.3rem);
			color: rgba(255, 255, 255, 0.8);
			margin-bottom: 2rem;
		}
	}

	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}

	.cta-buttons {
		display: flex;
		gap: 1rem;
		justify-content: center;
	}

	.button {
		display: inline-block;
		padding: 0.8rem 1.6rem;
		border-radius: 0.5rem;
		background: rgba(255, 255, 255, 0.1);
		color: white;
		font-weight: 500;
		text-decoration: none;
		transition: all 0.2s ease;
		border: 1px solid rgba(255, 255, 255, 0.1);

		&:hover {
			background: rgba(255, 255, 255, 0.2);
			transform: translateY(-2px);
		}

		&.primary {
			background: rgb(var(--accent));
			border-color: rgb(var(--accent));

			&:hover {
				background: rgb(var(--accent-light));
			}
		}

		&.outline {
			background: transparent;
			border: 1px solid rgb(var(--accent));
			color: rgb(var(--accent));

			&:hover {
				background: rgb(var(--accent));
				color: white;
			}
		}
	}

	.featured-posts {
		padding: 4rem 0;

		h2 {
			font-size: 2rem;
			margin-bottom: 2rem;
			text-align: center;
		}
	}

	.blog-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 2rem;
		margin-bottom: 3rem;
	}

	.view-all {
		text-align: center;
	}

	.topics {
		padding: 4rem 0;
		background: rgba(255, 255, 255, 0.02);
		border-top: 1px solid rgba(255, 255, 255, 0.1);
		border-bottom: 1px solid rgba(255, 255, 255, 0.1);

		h2 {
			font-size: 2rem;
			margin-bottom: 2rem;
			text-align: center;
		}
	}

	.topics-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
		gap: 2rem;
	}

	.topic-card {
		background: rgba(255, 255, 255, 0.05);
		padding: 2rem;
		border-radius: 1rem;
		border: 1px solid rgba(255, 255, 255, 0.1);
		transition: all 0.3s ease;

		&:hover {
			background: rgba(255, 255, 255, 0.1);
			transform: translateY(-5px);
		}

		h3 {
			font-size: 1.5rem;
			margin-bottom: 1rem;
			color: rgb(var(--accent));
		}

		p {
			color: rgba(255, 255, 255, 0.8);
			line-height: 1.6;
		}
	}

	.newsletter {
		padding: 6rem 0;
		text-align: center;

		.newsletter-content {
			max-width: 600px;
			margin: 0 auto;
		}

		h2 {
			font-size: 2rem;
			margin-bottom: 1rem;
		}

		p {
			color: rgba(255, 255, 255, 0.8);
			margin-bottom: 2rem;
		}
	}

	.newsletter-form {
		display: flex;
		gap: 1rem;
		max-width: 500px;
		margin: 0 auto;

		@media (max-width: 576px) {
			flex-direction: column;
		}

		input {
			flex: 1;
			padding: 0.8rem 1.2rem;
			border-radius: 0.5rem;
			border: 1px solid rgba(255, 255, 255, 0.1);
			background: rgba(255, 255, 255, 0.05);
			color: white;
			font-size: 1rem;

			&:focus {
				outline: none;
				border-color: rgb(var(--accent));
			}

			&::placeholder {
				color: rgba(255, 255, 255, 0.5);
			}
		}
	}
</style>
