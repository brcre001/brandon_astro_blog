---
interface Props {
    title: string;
    description: string;
    pubDate: Date;
    url: string;
    image?: string;
    tags?: string[];
}

const { title, description, pubDate, url, image, tags } = Astro.props;
const formattedDate = pubDate.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
});
---

<article class="blog-card">
    {image && (
        <a href={url} class="image-container">
            <img src={image} alt={title} />
        </a>
    )}
    <div class="content">
        <header>
            {tags && tags.length > 0 && (
                <div class="tags">
                    {tags.map(tag => (
                        <a href={`/blog/tag/${tag.toLowerCase()}`} class="tag">#{tag}</a>
                    ))}
                </div>
            )}
            <h2><a href={url}>{title}</a></h2>
            <time datetime={pubDate.toISOString()}>{formattedDate}</time>
        </header>
        <p>{description}</p>
        <a href={url} class="read-more">Read More â†’</a>
    </div>
</article>

<style lang="scss">
    .blog-card {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 1rem;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;

        &:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
    }

    .image-container {
        width: 100%;
        height: 200px;
        overflow: hidden;
        display: block;

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;

            &:hover {
                transform: scale(1.05);
            }
        }
    }

    .content {
        padding: 1.5rem;
    }

    header {
        margin-bottom: 1rem;

        h2 {
            margin: 0.5rem 0;
            font-size: 1.5rem;

            a {
                color: white;
                text-decoration: none;
                
                &:hover {
                    color: rgb(var(--accent));
                }
            }
        }

        time {
            color: rgba(255, 255, 255, 0.6);
            font-size: 0.9rem;
        }
    }

    .tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
        margin-bottom: 0.5rem;
    }

    .tag {
        font-size: 0.8rem;
        color: rgb(var(--accent));
        text-decoration: none;
        transition: color 0.2s ease;

        &:hover {
            color: white;
        }
    }

    p {
        color: rgba(255, 255, 255, 0.8);
        line-height: 1.6;
        margin-bottom: 1.5rem;
    }

    .read-more {
        color: rgb(var(--accent));
        text-decoration: none;
        font-weight: 500;
        transition: color 0.2s ease;

        &:hover {
            color: white;
        }
    }
</style> 